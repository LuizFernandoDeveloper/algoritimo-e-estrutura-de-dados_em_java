package ex.dataStructure;

import ex.dataStructure.exception.NotfoudItemInArray;

/*
 * 
 * Com base no que foi aprendido no módulo 1, 
 * implemente uma classe que represente uma 
 * estrutura de dados de Fila (FIFO – first in, first out). 
 * Sua implementação aceitará somente inteiros e deverá 
 * conter os seguintes métodos:
 * 
 * * enqueue() → Adiciona um inteiro à fila.
 * * dequeue() → Remove um inteiro da fila.
 * * rear() → Retorna o inteiro que está no fim da fila.
 * * front() → Retorna o inteiro que está na frente da fila.
 * * size() → Retorna o tamanho da fila.
 * * isEmpty() → Retorna true ou false dependendo da fila estar vazia ou não.
 * 
 * */

public class DataStructure {
	
	private int[] elements;
	private  int index;
	public DataStructure(int maximumSize) {
		
		this.elements = new int[maximumSize];
		this.index = 0;
	}
	
	/**
	 * metodo para adicionar itens no array
	 * @param element e o item que sera adicionado no array
	 * 
	 * */
	 public void enqueue(int element) {
		 
		 elements[index] = element;
		 index ++;
		 
	 }
	 
	 public void dequeue(int element) {
		 
		 for (int i : elements) {
			 
			if (elements[i] == element) {
				
				if (i == 0 ) {
					
					 int check = i;
					 int[] newArrayElemts = new int[elements.length -2];
					 
					for (int j : elements) {
						if (j != check) {
							newArrayElemts[j] = elements[j];
						}
					}
					
				 elements = newArrayElemts;
				 
				}else {
					
					throw new ItemNotTheFirdt("Item nao e o primeiro");
				}

				}
			; 
			}
			else {
				
				throw new  NotfoudItemInArray("Item nao encontrato");
				
			}
		}
		 
	 }
	
}